{"ast":null,"code":"var _jsxFileName = \"/Users/la40020503/Desktop/SheCodes/weather-react-app/src/Forecast.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Api from \"./Api\";\nimport DateUtil from \"./DateUtil\";\nimport \"./Forecast.css\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Forecast extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      city: this.props.city\n    };\n    this.refresh = () => {\n      let url = `${Api.url}/data/2.5/forecast?appid=${Api.key}&units=metric&q=${this.state.city}`;\n      axios.get(url).then(response => {\n        let forecast = response.data.list;\n        // The API returns the forecast every 3 hour, so we are exrtacting\n        // the weather for every 24 hours which 8 times 3 hour cycles\n        let dailyForecast = [7, 15, 23, 31, 39].map(index => {\n          return {\n            description: forecast[index].weather[0].main,\n            icon: forecast[index].weather[0].icon,\n            precipitation: Math.round(forecast[index].main.humidity) + \"%\",\n            temperature: Math.round(forecast[index].main.temp),\n            day: new DateUtil(new Date(forecast[index].dt * 1000)).day(true),\n            wind: Math.round(forecast[index].wind.speed) + \"km/h\"\n          };\n        });\n        this.setState({\n          forecast: dailyForecast\n        });\n      });\n    };\n  }\n  componentWillMount() {\n    this.refresh();\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      city: nextProps.city\n    }, () => {\n      this.refresh();\n    });\n  }\n  render() {\n    if (this.state.forecast) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.forecast.map((weather, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-day\",\n              children: weather.day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-icon\",\n              children: /*#__PURE__*/_jsxDEV(WeatherIcon, {\n                iconName: weather.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-temperature\",\n              children: [weather.temperature, \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    }\n  }\n}","map":{"version":3,"names":["React","Component","axios","Api","DateUtil","WeatherIcon","Forecast","state","city","props","refresh","url","key","get","then","response","forecast","data","list","dailyForecast","map","index","description","weather","main","icon","precipitation","Math","round","humidity","temperature","temp","day","Date","dt","wind","speed","setState","componentWillMount","componentWillReceiveProps","nextProps","render"],"sources":["/Users/la40020503/Desktop/SheCodes/weather-react-app/src/Forecast.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Api from \"./Api\";\nimport DateUtil from \"./DateUtil\";\nimport \"./Forecast.css\";\nimport WeatherIcon from \"./WeatherIcon\";\n\nexport default class Forecast extends Component {\n  state = {\n    city: this.props.city,\n  };\n  componentWillMount() {\n    this.refresh();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ city: nextProps.city }, () => {\n      this.refresh();\n    });\n  }\n\n  refresh = () => {\n    let url = `${Api.url}/data/2.5/forecast?appid=${Api.key}&units=metric&q=${this.state.city}`;\n\n    axios.get(url).then((response) => {\n      let forecast = response.data.list;\n      // The API returns the forecast every 3 hour, so we are exrtacting\n      // the weather for every 24 hours which 8 times 3 hour cycles\n      let dailyForecast = [7, 15, 23, 31, 39].map((index) => {\n        return {\n          description: forecast[index].weather[0].main,\n          icon: forecast[index].weather[0].icon,\n          precipitation: Math.round(forecast[index].main.humidity) + \"%\",\n          temperature: Math.round(forecast[index].main.temp),\n          day: new DateUtil(new Date(forecast[index].dt * 1000)).day(true),\n          wind: Math.round(forecast[index].wind.speed) + \"km/h\",\n        };\n      });\n      this.setState({ forecast: dailyForecast });\n    });\n  };\n  render() {\n    if (this.state.forecast) {\n      return (\n        <div className=\"row\">\n          {this.state.forecast.map((weather, index) => {\n            return (\n              <div className=\"col-sm-2\" key={index}>\n                <div className=\"forecast-day\">{weather.day}</div>\n                <div className=\"forecast-icon\">\n                  <WeatherIcon iconName={weather.icon} />\n                </div>\n                <div className=\"forecast-temperature\">\n                  {weather.temperature}Â°\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}