{"ast":null,"code":"var _jsxFileName = \"/Users/la40020503/Desktop/SheCodes/react-dictionary-search-engine/src/Dictionary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Result from \"./Result\";\nimport Photos from \"./Photos\";\nimport \"./Dictionary.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n  const [keyword, setKeyword] = useState(props.defaultKeyword);\n  const [loaded, setLoaded] = useState(false);\n  const [definition, setDefinition] = useState(null);\n  const [photos, setPhotos] = useState([]);\n  function handleImages(response) {\n    setPhotos(response.data.photos);\n  }\n  function handleResponse(response) {\n    setDefinition(response.data[0]);\n    let apiUrl = `https://api.pexels.com/v1/search?query=${response.data[0].word}&per_page=9`;\n    let apiKey = \"563492ad6f91700001000001fcd94c1777b243de94bf7f60bc16a402\";\n    axios.get(apiUrl, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(handleImages);\n  }\n  function load() {\n    setLoaded(true);\n    search();\n  }\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dictionary\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"What word do you want to look up?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"Search for a word\",\n            defaultValue: props.defaultKeyword,\n            autoFocus: true,\n            className: \"form-control search-input\",\n            onChange: handleKeywordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"hint\",\n          children: \"i.e. paris, wine, yoga, coding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Result, {\n        definition: definition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Photos, {\n        photos: photos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return \"Loading!\";\n  }\n}\n_s(Dictionary, \"+xoHOFhWqd5hK4qlmZy3j+01eLg=\");\n_c = Dictionary;\nvar _c;\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"names":["React","useState","axios","Result","Photos","Dictionary","props","keyword","setKeyword","defaultKeyword","loaded","setLoaded","definition","setDefinition","photos","setPhotos","handleImages","response","data","handleResponse","apiUrl","word","apiKey","get","headers","Authorization","then","load","search","handleSubmit","event","preventDefault","handleKeywordChange","target","value"],"sources":["/Users/la40020503/Desktop/SheCodes/react-dictionary-search-engine/src/Dictionary.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Result from \"./Result\";\nimport Photos from \"./Photos\";\nimport \"./Dictionary.css\";\n\nexport default function Dictionary(props) {\n  const [keyword, setKeyword] = useState(props.defaultKeyword);\n  const [loaded, setLoaded] = useState(false);\n  const [definition, setDefinition] = useState(null);\n  const [photos, setPhotos] = useState([]);\n\n  function handleImages(response) {\n    setPhotos(response.data.photos);\n  }\n\n  function handleResponse(response) {\n    setDefinition(response.data[0]);\n    let apiUrl = `https://api.pexels.com/v1/search?query=${response.data[0].word}&per_page=9`;\n    let apiKey = \"563492ad6f91700001000001fcd94c1777b243de94bf7f60bc16a402\";\n    axios\n      .get(apiUrl, { headers: { Authorization: `Bearer ${apiKey}` } })\n      .then(handleImages);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"Dictionary\">\n        <section>\n          <form onSubmit={handleSubmit}>\n            <label>What word do you want to look up?</label>\n            <input\n              type=\"search\"\n              placeholder=\"Search for a word\"\n              defaultValue={props.defaultKeyword}\n              autoFocus={true}\n              className=\"form-control search-input\"\n              onChange={handleKeywordChange}\n            />\n          </form>\n          <small className=\"hint\">i.e. paris, wine, yoga, coding</small>\n        </section>\n        <Result definition={definition} />\n        <Photos photos={photos} />\n      </div>\n    );\n  } else {\n    load();\n    return \"Loading!\";\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,kBAAkB;AAAC;AAE1B,eAAe,SAASC,UAAU,CAACC,KAAK,EAAE;EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAACK,KAAK,CAACG,cAAc,CAAC;EAC5D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASe,YAAY,CAACC,QAAQ,EAAE;IAC9BF,SAAS,CAACE,QAAQ,CAACC,IAAI,CAACJ,MAAM,CAAC;EACjC;EAEA,SAASK,cAAc,CAACF,QAAQ,EAAE;IAChCJ,aAAa,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,IAAIE,MAAM,GAAI,0CAAyCH,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACG,IAAK,aAAY;IACzF,IAAIC,MAAM,GAAG,0DAA0D;IACvEpB,KAAK,CACFqB,GAAG,CAACH,MAAM,EAAE;MAAEI,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASH,MAAO;MAAE;IAAE,CAAC,CAAC,CAC/DI,IAAI,CAACV,YAAY,CAAC;EACvB;EAEA,SAASW,IAAI,GAAG;IACdhB,SAAS,CAAC,IAAI,CAAC;IACfiB,MAAM,EAAE;EACV;EAEA,SAASA,MAAM,GAAG;IAChB,IAAIR,MAAM,GAAI,sDAAqDb,OAAQ,EAAC;IAC5EL,KAAK,CAACqB,GAAG,CAACH,MAAM,CAAC,CAACM,IAAI,CAACP,cAAc,CAAC;EACxC;EAEA,SAASU,YAAY,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,EAAE;IACtBH,MAAM,EAAE;EACV;EAEA,SAASI,mBAAmB,CAACF,KAAK,EAAE;IAClCtB,UAAU,CAACsB,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EAChC;EAEA,IAAIxB,MAAM,EAAE;IACV,oBACE;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAA,wBACE;UAAM,QAAQ,EAAEmB,YAAa;UAAA,wBAC3B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgD,eAChD;YACE,IAAI,EAAC,QAAQ;YACb,WAAW,EAAC,mBAAmB;YAC/B,YAAY,EAAEvB,KAAK,CAACG,cAAe;YACnC,SAAS,EAAE,IAAK;YAChB,SAAS,EAAC,2BAA2B;YACrC,QAAQ,EAAEuB;UAAoB;YAAA;YAAA;YAAA;UAAA,QAC9B;QAAA;UAAA;UAAA;UAAA;QAAA,QACG,eACP;UAAO,SAAS,EAAC,MAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuC;MAAA;QAAA;QAAA;QAAA;MAAA,QACtD,eACV,QAAC,MAAM;QAAC,UAAU,EAAEpB;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eAClC,QAAC,MAAM;QAAC,MAAM,EAAEE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB;EAEV,CAAC,MAAM;IACLa,IAAI,EAAE;IACN,OAAO,UAAU;EACnB;AACF;AAAC,GA/DuBtB,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}